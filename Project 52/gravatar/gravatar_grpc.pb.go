// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.3
// source: proto/gravatar.proto

package gravatar

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	GravatarService_Generate_FullMethodName = "/gravatar.GravatarService/Generate"
)

// GravatarServiceClient is the client API for GravatarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GravatarServiceClient interface {
	Generate(ctx context.Context, in *GravatarRequest, opts ...grpc.CallOption) (*GravatarResponse, error)
}

type gravatarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGravatarServiceClient(cc grpc.ClientConnInterface) GravatarServiceClient {
	return &gravatarServiceClient{cc}
}

func (c *gravatarServiceClient) Generate(ctx context.Context, in *GravatarRequest, opts ...grpc.CallOption) (*GravatarResponse, error) {
	out := new(GravatarResponse)
	err := c.cc.Invoke(ctx, GravatarService_Generate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GravatarServiceServer is the server API for GravatarService service.
// All implementations must embed UnimplementedGravatarServiceServer
// for forward compatibility
type GravatarServiceServer interface {
	Generate(context.Context, *GravatarRequest) (*GravatarResponse, error)
	mustEmbedUnimplementedGravatarServiceServer()
}

// UnimplementedGravatarServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGravatarServiceServer struct {
}

func (UnimplementedGravatarServiceServer) Generate(context.Context, *GravatarRequest) (*GravatarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Generate not implemented")
}
func (UnimplementedGravatarServiceServer) mustEmbedUnimplementedGravatarServiceServer() {}

// UnsafeGravatarServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GravatarServiceServer will
// result in compilation errors.
type UnsafeGravatarServiceServer interface {
	mustEmbedUnimplementedGravatarServiceServer()
}

func RegisterGravatarServiceServer(s grpc.ServiceRegistrar, srv GravatarServiceServer) {
	s.RegisterService(&GravatarService_ServiceDesc, srv)
}

func _GravatarService_Generate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GravatarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GravatarServiceServer).Generate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GravatarService_Generate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GravatarServiceServer).Generate(ctx, req.(*GravatarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GravatarService_ServiceDesc is the grpc.ServiceDesc for GravatarService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GravatarService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gravatar.GravatarService",
	HandlerType: (*GravatarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Generate",
			Handler:    _GravatarService_Generate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gravatar.proto",
}
